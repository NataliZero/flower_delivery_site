import os
import requests
from django.http import HttpResponse
from django.shortcuts import render, get_object_or_404
from .models import Product, Order, OrderItem
from .forms import OrderForm

def send_order_to_telegram(order):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –≤ Telegram-–±–æ—Ç–∞."""
    bot_token = os.getenv("TELEGRAM_BOT_TOKEN")
    chat_id = os.getenv("TELEGRAM_CHAT_ID")  # –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º CHAT_ID

    if not bot_token:
        print("–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return
    if not chat_id:
        print("–û—à–∏–±–∫–∞: TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä
    order_item = order.orderitem_set.first()
    if not order_item:
        print("–û—à–∏–±–∫–∞: –∑–∞–∫–∞–∑ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–≤–∞—Ä–æ–≤.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message = (
        f"üõí *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*\n"
        f"üì¶ *–¢–æ–≤–∞—Ä:* {order_item.product.name}\n"
        f"üìç *–ê–¥—Ä–µ—Å:* {order.address}\n"
        f"üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* {order.phone}\n"
        f"üì¶ *–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:* {order_item.quantity}\n"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {"chat_id": chat_id, "text": message, "parse_mode": "Markdown"}

    try:
        response = requests.post(url, json=payload)
        if response.status_code != 200:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {response.text}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API: {e}")

def index(request):
    return HttpResponse("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω —Ü–≤–µ—Ç–æ–≤!")

def catalog(request):
    products = Product.objects.all()
    return render(request, 'orders/catalog.html', {'products': products})

def order_create(request):
    if request.method == 'POST':
        form = OrderForm(request.POST)
        if form.is_valid():
            product_id = form.cleaned_data['product_id']
            product = get_object_or_404(Product, id=product_id)
            quantity = form.cleaned_data['quantity']
            address = form.cleaned_data['address']
            phone = form.cleaned_data['phone']

            # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
            order = Order.objects.create(
                address=address,
                phone=phone
            )

            # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å –∑–∞–∫–∞–∑–∞ —Å —Ç–æ–≤–∞—Ä–æ–º
            OrderItem.objects.create(order=order, product=product, quantity=quantity)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ Telegram-–±–æ—Ç–∞
            send_order_to_telegram(order)

            return HttpResponse("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!")
    else:
        # –ü—Ä–∏ GET-–∑–∞–ø—Ä–æ—Å–µ –æ–∂–∏–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä product_id –≤ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, ?product_id=1)
        product_id = request.GET.get('product_id')
        if not product_id:
            return HttpResponse("–ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.")
        form = OrderForm(initial={'product_id': product_id})

    return render(request, 'orders/order_form.html', {'form': form})
